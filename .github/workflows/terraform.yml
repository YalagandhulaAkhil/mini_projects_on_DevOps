# This is a basic workflow to help you get started with Actions

name: Terraform EC2 Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Setup Terraform
        uses:  hashicorp/setup-terraform@v2
        with:
          terraform_version: lastest

       # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # Terraform Init
      - name: Initialize Terraform
        run: terraform init

      # Terraform Format Check
      - name: Terraform Format
        run: terraform fmt -check

      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Terraform Plan (Show what will be deployed)
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Terraform Apply (Deploy the changes)
      - name: Terraform Apply
        run: terraform apply -auto-approve
      
      - name: Get Terraform Outputs
        id: tf_output
        run: |
          echo "INSTANCE_ID=$(terraform output -json | jq -r '.instance_id.value')" >> $GITHUB_ENV
          echo "INSTANCE_PUBLIC_IP=$(terraform output -json | jq -r '.instance_public_ip.value')" >> $GITHUB_ENV
          echo "VPC_ID=$(terraform output -json | jq -r '.vpc_id.value')" >> $GITHUB_ENV
          echo "SUBNET_ID=$(terraform output -json | jq -r '.subnet_id.value')" >> $GITHUB_ENV
          echo "ELASTIC_IP=$(terraform output -json | jq -r '.elastic_ip.value')" >> $GITHUB_ENV

      - name: Display Terraform Outputs
        run: |
          echo "EC2 Instance ID: $INSTANCE_ID"
          echo "EC2 Public IP: $INSTANCE_PUBLIC_IP"
          echo "VPC ID: $VPC_ID"
          echo "Subnet ID: $SUBNET_ID"
          echo "Elastic IP: $ELASTIC_IP"
